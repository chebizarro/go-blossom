// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// ListPubkeyGet implements GET /list/{pubkey} operation.
//
// The `GET /list/{pubkey}` endpoint retrieves a list of blobs uploaded by a user, identified by
// their Nostr public key.
// Optionally, the server may require authorization for listing blobs.
//
// GET /list/{pubkey}
func (UnimplementedHandler) ListPubkeyGet(ctx context.Context, params ListPubkeyGetParams) (r ListPubkeyGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MirrorPut implements PUT /mirror operation.
//
// The `PUT /mirror` endpoint allows users to mirror a blob from another server without directly
// uploading it.
// The request must contain a URL to the remote blob and an authorization event for the upload.
//
// PUT /mirror
func (UnimplementedHandler) MirrorPut(ctx context.Context, req *MirrorPutReq) (r MirrorPutRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SHA256Delete implements DELETE /{sha256} operation.
//
// The `DELETE /{sha256}` endpoint removes the blob identified by its SHA256 hash.
// This operation must be authorized using a Nostr event signed by the user.
//
// DELETE /{sha256}
func (UnimplementedHandler) SHA256Delete(ctx context.Context, params SHA256DeleteParams) (r SHA256DeleteRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SHA256Get implements GET /{sha256} operation.
//
// The `GET /{sha256}` endpoint retrieves the contents of the blob with the specified SHA256 hash.
// Optionally, an authorization event may be required to access this blob.
//
// GET /{sha256}
func (UnimplementedHandler) SHA256Get(ctx context.Context, params SHA256GetParams) (r SHA256GetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SHA256Head implements HEAD /{sha256} operation.
//
// The `HEAD /{sha256}` endpoint checks if the blob exists on the server by its SHA256 hash.
//
// HEAD /{sha256}
func (UnimplementedHandler) SHA256Head(ctx context.Context, params SHA256HeadParams) (r SHA256HeadRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UploadHead implements HEAD /upload operation.
//
// The `HEAD /upload` endpoint checks whether a blob can be uploaded by validating the SHA256 hash,
// MIME type, and size of the blob. Optionally, this endpoint can accept an authorization event.
//
// HEAD /upload
func (UnimplementedHandler) UploadHead(ctx context.Context, params UploadHeadParams) (r UploadHeadRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UploadPut implements PUT /upload operation.
//
// The `PUT /upload` endpoint allows users to upload a new blob to the server. The blob is addressed
// by its SHA256 hash,
// and the upload must be authorized with a Nostr event signed by the user.
//
// PUT /upload
func (UnimplementedHandler) UploadPut(ctx context.Context, req UploadPutReq) (r UploadPutRes, _ error) {
	return r, ht.ErrNotImplemented
}
